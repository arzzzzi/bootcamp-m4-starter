{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","components/Header/Header.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","index.js"],"names":["findFilm","movieList","type","payload","initialState","favorites","movies","id","localStorage","getItem","reducer","state","action","obj","newFavorites","movie","find","item","imdbID","alert","push","index","newFavoriteMovies","splice","anotherState","thirdState","idUserList","store","createStore","Header","className","Component","SearchBox","searchLine","searchLineChangeHandler","e","setState","target","value","searchBoxSubmitHandler","preventDefault","fetch","then","res","json","data","dispatch","Search","this","onSubmit","placeholder","onChange","disabled","MovieItem","props","Title","Year","Poster","addFilm","src","alt","onClick","Movies","addFilmToFavorites","map","key","functionFromConnect","connect","Favorites","title","link","removeFilm","removeFilmFromFavorites","console","log","changeTitle","saveList","method","headers","body","JSON","stringify","setItem","setIdUserList","to","getStorage","MainPage","ListPage","titleOfList","forEach","href","App","path","exact","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c7d9c29.chunk.js","sourcesContent":["const ADD_FILM_TO_FAVORITES = 'ADD_FILM_TO_FAVORITES'\r\nconst REMOVE_FILM_FROM_FAVORITES = 'REMOVE_FILM_FROM_FAVORITES'\r\nconst FIND_FILM = 'FIND_FILM'\r\nconst GET_STORAGE = 'GET_STORAGE'\r\n\r\nfunction addFilmToFavorites(obj) {\r\n    return {\r\n        type: ADD_FILM_TO_FAVORITES,\r\n        payload: {\r\n            obj: obj\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeFilmFromFavorites(index) {\r\n    return {\r\n        type: REMOVE_FILM_FROM_FAVORITES,\r\n        payload: {\r\n            index: index\r\n        }\r\n    }\r\n}\r\n\r\nfunction findFilm(movieList) {\r\n    return {\r\n        type: FIND_FILM,\r\n        payload: {\r\n            movieList: movieList\r\n        }\r\n    }\r\n}\r\n\r\nfunction getStorage(id) {\r\n    return {\r\n        type: GET_STORAGE,\r\n        payload: {\r\n            idUserList: id\r\n        }\r\n    }\r\n}\r\n\r\nexport { addFilmToFavorites, removeFilmFromFavorites, ADD_FILM_TO_FAVORITES, REMOVE_FILM_FROM_FAVORITES, FIND_FILM, findFilm, GET_STORAGE, getStorage };","import { ADD_FILM_TO_FAVORITES, REMOVE_FILM_FROM_FAVORITES, FIND_FILM, GET_STORAGE } from \"./actions\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    favorites: [],\r\n    movies: [],\r\n    id: localStorage.getItem('a')\r\n}\r\n\r\n\r\n\r\nfunction reducer(state = initialState, action) {\r\n    const { favorites } = state;\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_FILM_TO_FAVORITES:\r\n            const { obj } = action.payload\r\n            const newFavorites = [...favorites];\r\n            const movie = newFavorites.find(item => item.imdbID === obj.imdbID)\r\n            if (!movie) {\r\n                newFavorites.push(obj)\r\n                return {...state, favorites: newFavorites }\r\n            } else {\r\n                alert('Фильм уже добавлен')\r\n                return state\r\n            }\r\n\r\n        case REMOVE_FILM_FROM_FAVORITES:\r\n            const { index } = action.payload\r\n            const newFavoriteMovies = [...favorites]\r\n            newFavoriteMovies.splice(index, 1);\r\n            const anotherState = {...state, favorites: newFavoriteMovies }\r\n            return anotherState\r\n        case FIND_FILM:\r\n            const { movieList } = action.payload\r\n            const thirdState = { movies: movieList, favorites }\r\n            return thirdState\r\n        case GET_STORAGE:\r\n            const { idUserList } = action.payload\r\n            return ({...state, id: idUserList })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer.js';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    render() { \r\n        return (\r\n            <header className=\"header\">\r\n                <h1 className=\"header__title\">\r\n                    MustSee\r\n                </h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport { findFilm } from '../../redux/actions';\r\nimport './SearchBox.css';\r\nimport store from '../../redux/store';\r\n\r\nclass SearchBox extends Component {\r\n    state = {\r\n        searchLine: ''\r\n    }\r\n    searchLineChangeHandler = (e) => {\r\n        this.setState({ searchLine: e.target.value });\r\n    }\r\n    \r\n    searchBoxSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        fetch(\r\n            `http://www.omdbapi.com/?s=${this.state.searchLine}&apikey=751f7b09`\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => store.dispatch(findFilm(data.Search)))\r\n    }\r\n    render() {\r\n        const { searchLine } = this.state;\r\n\r\n        return (\r\n            <div className=\"search-box\">\r\n                <form className=\"search-box__form\" onSubmit={this.searchBoxSubmitHandler}>\r\n                    <label className=\"search-box__form-label\">\r\n                        Искать фильм по названию:\r\n                        <input\r\n                            value={searchLine}\r\n                            type=\"text\"\r\n                            className=\"search-box__form-input\"\r\n                            placeholder=\"Например, Shawshank Redemption\"\r\n                            onChange={this.searchLineChangeHandler}\r\n                        />\r\n                    </label>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"search-box__form-submit\"\r\n                        disabled={!searchLine}\r\n                    >\r\n                        Искать\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\nimport './MovieItem.css';\r\n\r\nclass MovieItem extends Component {\r\n    render() {\r\n        const { Title, Year, Poster, addFilm } = this.props;\r\n        return (\r\n            <article className=\"movie-item\">\r\n                <img className=\"movie-item__poster\" src={Poster} alt={Title} />\r\n                <div className=\"movie-item__info\">\r\n                    <h3 className=\"movie-item__title\">{Title}&nbsp;({Year})</h3>\r\n                    <button type=\"button\" className=\"movie-item__add-button\" onClick={() => addFilm(this.props)} >Добавить в список</button>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MovieItem;","import React, { Component } from 'react';\r\nimport MovieItem from '../MovieItem/MovieItem';\r\nimport './Movies.css';\r\nimport { connect } from 'react-redux';\r\nimport { addFilmToFavorites } from '../../redux/actions'\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: []\r\n  }\r\n  componentDidMount() {\r\n    const { movies } = this.props;\r\n    this.setState({ movies });\r\n  }\r\n\r\n  addFilm = (obj) => {\r\n    this.props.addFilmToFavorites(obj)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"movies\">\r\n        {this.props.movies && this.props.movies.map((movie) => (\r\n          <li className=\"movies__item\" key={movie.imdbID}>\r\n            <MovieItem {...movie} addFilm={this.addFilm}/>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  addFilmToFavorites: obj => dispatch(addFilmToFavorites(obj))\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies\r\n  }\r\n}\r\n\r\nconst functionFromConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n\r\nexport default functionFromConnect(Movies);\r\n","import React, { Component } from 'react';\r\nimport './Favorites.css';\r\nimport { connect } from 'react-redux';\r\nimport { getStorage, removeFilmFromFavorites } from '../../redux/actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Favorites extends Component {\r\n    state = {\r\n        title: '',\r\n        link: ''\r\n    }\r\n    removeFilm = index => {\r\n        this.props.removeFilmFromFavorites(index)\r\n        console.log(index)\r\n    }\r\n    changeTitle = e => {\r\n        this.setState({\r\n            title: e.target.value,\r\n        })\r\n    }\r\n    saveList = () => {\r\n        const title = this.state.title\r\n        const movies = this.props.movies.map(movie => {\r\n            return (movie.imdbID)\r\n        })\r\n        fetch(`https://acb-api.algoritmika.org/api/movies/list`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                \"title\": title,\r\n                \"movies\": movies\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                localStorage.setItem('a', data.id)\r\n                this.props.setIdUserList(data.id)\r\n                this.setState({ link: data.id })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"favorites\">\r\n                <input value={this.state.title} className=\"favorites__name\" onChange={this.changeTitle} />\r\n                <ul className=\"favorites__list\">\r\n                    {this.props.movies && this.props.movies.map((item, index) => {\r\n                        return <div className='fav' key={item.Title} >\r\n                            <li className='movieName'>{item.Title} ({item.Year})</li>\r\n                            <button className='deleteBtn' onClick={() => this.removeFilm(index)}>  X </button>\r\n                        </div>\r\n                    })}\r\n                </ul>\r\n\r\n                {this.props.idUserList\r\n                    ? <Link to={`/list/${localStorage.getItem('a')}`}> Перейти </Link>\r\n                    : <button type=\"button\" className=\"favorites__save\" onClick={this.saveList}>Сохранить список</button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeFilmFromFavorites: index => dispatch(removeFilmFromFavorites(index)),\r\n    setIdUserList: id => dispatch(getStorage(id))\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: state.favorites,\r\n        idUserList: state.id\r\n    }\r\n}\r\n\r\nconst functionFromConnect = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n\r\nexport default functionFromConnect(Favorites);","import React, { Component } from 'react';\r\nimport './MainPage.css';\r\nimport Header from '../../components/Header/Header';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\nimport Movies from '../../components/Movies/Movies';\r\nimport Favorites from '../../components/Favorites/Favorites';\r\n\r\nclass MainPage extends Component {\r\n    render() { \r\n        return (\r\n            <div className=\"main-page\">\r\n                <Header />\r\n                <main className=\"main-page__content\">\r\n                    <section className=\"main-page__main-section\">\r\n                        <div className=\"main-page__search-box\">\r\n                            <SearchBox />\r\n                        </div>\r\n                        <div className=\"main-page__movies\">\r\n                            <Movies />\r\n                        </div>\r\n                    </section>\r\n                    <aside className=\"main-page__favorites\">\r\n                        <Favorites />\r\n                    </aside>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './ListPage.css';\r\n\r\nclass ListPage extends Component {\r\n    state = {\r\n        movies: [],\r\n        titleOfList: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://acb-api.algoritmika.org/api/movies/list/${localStorage.getItem('a')}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    titleOfList: data.title\r\n                })\r\n                data.movies.forEach(movie => {\r\n                    fetch(`http://www.omdbapi.com/?i=${movie}&apikey=751f7b09`)\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            this.setState({\r\n                                movies: [...this.state.movies, data]\r\n                            })\r\n                        })\r\n                });\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"list-page\">\r\n                    <h1 className=\"list-page__title\">{this.state.titleOfList}</h1>\r\n                    <ul>\r\n                        {this.state.movies.map((item) => {\r\n                            return (\r\n                                <li key={item.imdbID}>\r\n                                    <a href={`https://www.imdb.com/title/${item.imdbID}/`} >{item.Title} ({item.Year})</a>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListPage;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport ListPage from './pages/ListPage/ListPage';\r\nimport { connect } from 'react-redux'\r\n\r\nimport './reset.css';\r\nimport './common.css';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    // localStorage.removeItem('a')\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path=\"/\" exact><MainPage /></Route>\r\n        <Route path={`/list/${localStorage.getItem('a')}`} exact><ListPage /> </Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { idUserList: state.id }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './redux/store'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  </BrowserRouter>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}